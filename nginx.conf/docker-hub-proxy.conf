server {
  listen 443 ssl;
  server_name docker-hub-proxy.zhiqiang.wang;
  # https://www.zhiqiang.wang/2021/01/14/om/acme-sh/
  ssl_certificate /etc/nginx/ssl/docker-hub-proxy.zhiqiang.wang.cer;
  ssl_certificate_key /etc/nginx/ssl/docker-hub-proxy.zhiqiang.wang.key;

   # 启用SNI
  proxy_ssl_server_name on;

  ssl_session_timeout 24h;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  
  location / {
    proxy_pass https://registry-1.docker.io;  # Docker Hub 的官方镜像仓库
    proxy_set_header Host registry-1.docker.io;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # 关闭缓存
    proxy_buffering off;
    # 转发认证相关的头部
    proxy_set_header Authorization $http_authorization;
    proxy_pass_header  Authorization;
    # 对 upstream 状态码检查，实现 error_page 错误重定向
    proxy_intercept_errors on;
    # error_page 指令默认只检查了第一次后端返回的状态码，开启后可以跟随多次重定向。
    recursive_error_pages on;
    # 根据状态码执行对应操作，以下为301、302、307状态码都会触发
    error_page 301 302 307 = @handle_redirect;

    error_page 429 = @handle_too_many_requests;
    
  }
  #处理重定向
  location @handle_redirect {
    resolver 1.1.1.1;
    set $saved_redirect_location '$upstream_http_location';
    proxy_pass $saved_redirect_location;
  }
  # 处理429错误
  location @handle_too_many_requests {
    proxy_set_header Host 替换为在CloudFlare Worker设置的域名;  # 替换为另一个服务器的地址
    proxy_pass http://替换为在CloudFlare Worker设置的域名;
    proxy_set_header Host $http_host;
  }
}
